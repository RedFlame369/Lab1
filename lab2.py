from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
import asyncio
import random

TOKEN = "7802161506:AAHSCTmhWh4HBr-NKnkcEiIn_2Yn1uXVuCw"

bot = Bot(token=TOKEN)
dp = Dispatcher()


# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM
class GameState(StatesGroup):
    waiting_for_guess = State()


# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –∏–≥—Ä–∞ '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ'. –ù–∞–ø–∏—à–∏ /game, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!")


# –ö–æ–º–∞–Ω–¥–∞ /game - –Ω–∞—á–∞–ª–æ –∏–≥—Ä—ã
@dp.message(Command("game"))
async def start_game(message: Message, state: FSMContext):
    number = random.randint(1, 100)  # –ó–∞–≥–∞–¥—ã–≤–∞–µ–º —á–∏—Å–ª–æ
    await state.update_data(secret_number=number)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ
    await state.set_state(GameState.waiting_for_guess)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await message.answer("–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100. –ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å!")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message(GameState.waiting_for_guess)
async def process_guess(message: Message, state: FSMContext):
    user_data = await state.get_data()  # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    secret_number = user_data["secret_number"]  # –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ

    try:
        guess = int(message.text)
    except ValueError:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ!")
        return

    if guess < secret_number:
        await message.answer("–ë–æ–ª—å—à–µ!")
    elif guess > secret_number:
        await message.answer("–ú–µ–Ω—å—à–µ!")
    else:
        await message.answer("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã —É–≥–∞–¥–∞–ª üéâ")
        await state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–∏–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞)


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
